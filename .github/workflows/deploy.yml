name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Archive project files
        run: zip -r app.zip ./*

      - name: Copy project to EC2
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          source: "app.zip"
          target: "/home/ubuntu/app.zip"

      - name: Extract project files on EC2
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo apt update -y && sudo apt upgrade -y
            sudo apt install -y build-essential libssl-dev curl
            sudo apt install -y docker.io
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            cd /home/ubuntu
            unzip app.zip
            sudo docker-compose up --build -d
            sudo apt install -y nginx
            sudo tee /etc/nginx/sites-available/frontend <<EOL
            server {
                listen 81;
                server_name _;

                location / {
                    proxy_pass http://localhost:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOL
            sudo tee /etc/nginx/sites-available/backend <<EOL
            server {
                listen 82;
                server_name _;

                location / {
                    proxy_pass http://localhost:4000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOL
            sudo ln -s /etc/nginx/sites-available/frontend /etc/nginx/sites-enabled/
            sudo ln -s /etc/nginx/sites-available/backend /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx
